{"ast":null,"code":"// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import 'chart.js/auto';\n// import 'chartjs-adapter-date-fns';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function Application() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n// const fetchData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/data');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const jsonData = await response.json();\n//       setData(jsonData.map(item => ({...item,\n//         machine_status: item.machine_status !== null ? item.machine_status : 'missing',\n//         vibration: item.vibration !== null ? item.vibration : 'missing'\n//     })));\n//     } catch (error) {\n//       console.error('There was a problem with the fetch operation:', error);\n//     }\n//   };\n\n//   const chartData = {\n//     labels: data.map(item => item.ts),\n//     datasets: [\n//         {\n//             label: 'Vibration Levels',\n//             data: data.map(item => item.vibration === 'missing' ? NaN : item.vibration),\n//             backgroundColor: data.map(item => {\n//                 if (item.machine_status === 0) return 'yellow';\n//                 else if (item.machine_status === 1) return 'green';\n//                 else return 'red'; // Handle missing data\n//             }),\n//             borderColor: 'black',\n//             borderWidth: 1,\n//         }\n//     ],\n// };\n\n// const options = {\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: {\n//                 unit: 'minute'\n//             }\n//         },\n//         y: {\n//             beginAtZero: true\n//         }\n//     },\n//     plugins: {\n//         legend: {\n//             display: false\n//         }\n//     }\n// };\n\n//     return ( \n//         <div>\n//       <h1>This is Application's front page</h1>\n//       <div>\n//         <h2>Data from Node.js:</h2>\n//         <Bar data={chartData} options={options} />\n//       </div>\n//     </div>\n//      );\n// }\n\n// export default Application;","map":{"version":3,"names":[],"sources":["/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js"],"sourcesContent":["// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import 'chart.js/auto';\n// import 'chartjs-adapter-date-fns';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function Application() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n// const fetchData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/data');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const jsonData = await response.json();\n//       setData(jsonData.map(item => ({...item,\n//         machine_status: item.machine_status !== null ? item.machine_status : 'missing',\n//         vibration: item.vibration !== null ? item.vibration : 'missing'\n//     })));\n//     } catch (error) {\n//       console.error('There was a problem with the fetch operation:', error);\n//     }\n//   };\n\n//   const chartData = {\n//     labels: data.map(item => item.ts),\n//     datasets: [\n//         {\n//             label: 'Vibration Levels',\n//             data: data.map(item => item.vibration === 'missing' ? NaN : item.vibration),\n//             backgroundColor: data.map(item => {\n//                 if (item.machine_status === 0) return 'yellow';\n//                 else if (item.machine_status === 1) return 'green';\n//                 else return 'red'; // Handle missing data\n//             }),\n//             borderColor: 'black',\n//             borderWidth: 1,\n//         }\n//     ],\n// };\n\n// const options = {\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: {\n//                 unit: 'minute'\n//             }\n//         },\n//         y: {\n//             beginAtZero: true\n//         }\n//     },\n//     plugins: {\n//         legend: {\n//             display: false\n//         }\n//     }\n// };\n\n//     return ( \n//         <div>\n//       <h1>This is Application's front page</h1>\n//       <div>\n//         <h2>Data from Node.js:</h2>\n//         <Bar data={chartData} options={options} />\n//       </div>\n//     </div>\n//      );\n// }\n\n// export default Application;"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}