{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js\",\n  _s = $RefreshSig$();\n// TimelineChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimelineChart = () => {\n  _s();\n  const [sampleData, setSampleData] = useState([]);\n  useEffect(() => {\n    const fetchSampleData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        setSampleData(response.data);\n      } catch (error) {\n        console.error('Error fetching sample data:', error);\n      }\n    };\n    fetchSampleData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      alignItems: 'flex-end',\n      height: '100px'\n    },\n    children: sampleData.map((sample, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `${sample.machine_status === 1 ? 10 : 5}%`,\n        height: `${sample.vibration / 100 * 80}px`,\n        backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n        marginRight: '1px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '10px',\n          marginTop: '5px'\n        },\n        children: new Date(sample.ts).toLocaleTimeString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(TimelineChart, \"PI0ogT/UwFJIGFdOtVwZHSZlQio=\");\n_c = TimelineChart;\nexport default TimelineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import 'chart.js/auto';\n// import 'chartjs-adapter-date-fns';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function Application() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n// const fetchData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/data');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const jsonData = await response.json();\n//       setData(jsonData.map(item => ({...item,\n//         machine_status: item.machine_status !== null ? item.machine_status : 'missing',\n//         vibration: item.vibration !== null ? item.vibration : 'missing'\n//     })));\n//     } catch (error) {\n//       console.error('There was a problem with the fetch operation:', error);\n//     }\n//   };\n\n//   const chartData = {\n//     labels: data.map(item => item.ts),\n//     datasets: [\n//         {\n//             label: 'Vibration Levels',\n//             data: data.map(item => item.vibration === 'missing' ? NaN : item.vibration),\n//             backgroundColor: data.map(item => {\n//                 if (item.machine_status === 0) return 'yellow';\n//                 else if (item.machine_status === 1) return 'green';\n//                 else return 'red'; // Handle missing data\n//             }),\n//             borderColor: 'black',\n//             borderWidth: 1,\n//         }\n//     ],\n// };\n\n// const options = {\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: {\n//                 unit: 'minute'\n//             }\n//         },\n//         y: {\n//             beginAtZero: true\n//         }\n//     },\n//     plugins: {\n//         legend: {\n//             display: false\n//         }\n//     }\n// };\n\n//     return ( \n//         <div>\n//       <h1>This is Application's front page</h1>\n//       <div>\n//         <h2>Data from Node.js:</h2>\n//         <Bar data={chartData} options={options} />\n//       </div>\n//     </div>\n//      );\n// }\n\n// export default Application;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TimelineChart","_s","sampleData","setSampleData","fetchSampleData","response","get","data","error","console","style","display","alignItems","height","children","map","sample","index","width","machine_status","vibration","backgroundColor","marginRight","fontSize","marginTop","Date","ts","toLocaleTimeString","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js"],"sourcesContent":["// TimelineChart.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TimelineChart = () => {\n  const [sampleData, setSampleData] = useState([]);\n\n  useEffect(() => {\n    const fetchSampleData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/api/data');\n        setSampleData(response.data);\n      } catch (error) {\n        console.error('Error fetching sample data:', error);\n      }\n    };\n    fetchSampleData();\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n      {sampleData.map((sample, index) => (\n        <div\n          key={index}\n          style={{\n            width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n            height: `${sample.vibration / 100 * 80}px`,\n            backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n            marginRight: '1px',\n          }}\n        >\n          <div style={{ fontSize: '10px', marginTop: '5px' }}>\n            {new Date(sample.ts).toLocaleTimeString()}\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TimelineChart;\n\n// import React, { useState, useEffect } from 'react';\n// import { Bar } from 'react-chartjs-2';\n// import 'chart.js/auto';\n// import 'chartjs-adapter-date-fns';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n// function Application() {\n\n//     const [data, setData] = useState([]);\n\n//     useEffect(() => {\n//         fetchData();\n//     }, []);\n\n// const fetchData = async () => {\n//     try {\n//       const response = await fetch('http://localhost:5000/api/data');\n//       if (!response.ok) {\n//         throw new Error('Network response was not ok');\n//       }\n//       const jsonData = await response.json();\n//       setData(jsonData.map(item => ({...item,\n//         machine_status: item.machine_status !== null ? item.machine_status : 'missing',\n//         vibration: item.vibration !== null ? item.vibration : 'missing'\n//     })));\n//     } catch (error) {\n//       console.error('There was a problem with the fetch operation:', error);\n//     }\n//   };\n\n//   const chartData = {\n//     labels: data.map(item => item.ts),\n//     datasets: [\n//         {\n//             label: 'Vibration Levels',\n//             data: data.map(item => item.vibration === 'missing' ? NaN : item.vibration),\n//             backgroundColor: data.map(item => {\n//                 if (item.machine_status === 0) return 'yellow';\n//                 else if (item.machine_status === 1) return 'green';\n//                 else return 'red'; // Handle missing data\n//             }),\n//             borderColor: 'black',\n//             borderWidth: 1,\n//         }\n//     ],\n// };\n\n// const options = {\n//     scales: {\n//         x: {\n//             type: 'time',\n//             time: {\n//                 unit: 'minute'\n//             }\n//         },\n//         y: {\n//             beginAtZero: true\n//         }\n//     },\n//     plugins: {\n//         legend: {\n//             display: false\n//         }\n//     }\n// };\n\n//     return ( \n//         <div>\n//       <h1>This is Application's front page</h1>\n//       <div>\n//         <h2>Data from Node.js:</h2>\n//         <Bar data={chartData} options={options} />\n//       </div>\n//     </div>\n//      );\n// }\n\n// export default Application;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd,MAAMQ,eAAe,GAAG,MAAAA,CAAA,KAAY;MAClC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,gCAAgC,CAAC;QAClEH,aAAa,CAACE,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACrD;IACF,CAAC;IACDJ,eAAe,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,UAAU;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,EACtEZ,UAAU,CAACa,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC5BlB,OAAA;MAEEW,KAAK,EAAE;QACLQ,KAAK,EAAG,GAAGF,MAAM,CAACG,cAAc,KAAK,CAAC,GAAG,EAAE,GAAG,CAAG,GAAE;QACnDN,MAAM,EAAG,GAAEG,MAAM,CAACI,SAAS,GAAG,GAAG,GAAG,EAAG,IAAG;QAC1CC,eAAe,EAAEL,MAAM,CAACG,cAAc,KAAK,CAAC,GAAG,QAAQ,GAAGH,MAAM,CAACG,cAAc,KAAK,CAAC,GAAG,OAAO,GAAG,KAAK;QACvGG,WAAW,EAAE;MACf,CAAE;MAAAR,QAAA,eAEFf,OAAA;QAAKW,KAAK,EAAE;UAAEa,QAAQ,EAAE,MAAM;UAAEC,SAAS,EAAE;QAAM,CAAE;QAAAV,QAAA,EAChD,IAAIW,IAAI,CAACT,MAAM,CAACU,EAAE,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC;IAAC,GAVDd,KAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAWP,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAlCID,aAAa;AAAAgC,EAAA,GAAbhC,aAAa;AAoCnB,eAAeA,aAAa;;AAE5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}