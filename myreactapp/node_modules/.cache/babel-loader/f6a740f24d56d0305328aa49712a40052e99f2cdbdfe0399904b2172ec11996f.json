{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js\",\n  _s = $RefreshSig$();\n// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\nfunction TimelineChart() {\n  _s();\n  const [data, setData] = useState([]);\n  const [chart, setChart] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:5000/api/data');\n      const jsonData = await response.json();\n      setData(jsonData);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      const ctx = document.getElementById('myChart').getContext('2d');\n      // Destroy previous chart instance if it exists\n      if (chart) {\n        chart.destroy();\n      }\n      const newChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: data.map(item => item.ts),\n          // Extract timestamps for labels (X-axis)\n          datasets: [{\n            label: 'Machine Status',\n            data: data.map(item => item.machine_status),\n            // Extract machine status for data points (Y-axis)\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\n            // Adjust color as needed\n            borderColor: 'rgba(54, 162, 235, 1)',\n            // Adjust color as needed\n            borderWidth: 1\n          }]\n        },\n        options: {\n          // Customize chart options (scales, legend, etc.) as needed\n          scales: {\n            xAxes: [{\n              type: 'category',\n              // Use category scale for timestamps\n              ticks: {\n                // ... configure X-axis ticks (e.g., label formatting)\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                // ... configure Y-axis ticks (e.g., label formatting)\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            // Show legend\n            position: 'bottom' // Place legend at the bottom\n          },\n\n          tooltips: {\n            enabled: true // Enable tooltips\n            // ... configure tooltip content and styling\n          }\n        }\n      });\n\n      setChart(newChart);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Machine Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 11\n  }, this);\n}\n_s(TimelineChart, \"Pg4PRYLtZwR01pobSXf/egQPh+8=\");\n_c = TimelineChart;\nexport default TimelineChart;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","CategoryScale","LinearScale","LineController","LineElement","PointElement","jsxDEV","_jsxDEV","register","TimelineChart","_s","data","setData","chart","setChart","fetchData","response","fetch","jsonData","json","length","ctx","document","getElementById","getContext","destroy","newChart","type","labels","map","item","ts","datasets","label","machine_status","backgroundColor","borderColor","borderWidth","options","scales","xAxes","ticks","yAxes","legend","display","position","tooltips","enabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js"],"sourcesContent":["// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement } from 'chart.js';\nChart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\n\nfunction TimelineChart() {\n        const [data, setData] = useState([]);\n        const [chart, setChart] = useState(null);\n      \n        useEffect(() => {\n          const fetchData = async () => {\n            const response = await fetch('http://localhost:5000/api/data');\n            const jsonData = await response.json();\n            setData(jsonData);\n          };\n      \n          fetchData();\n        }, []);\n      \n        useEffect(() => {\n          if (data.length > 0) {\n            const ctx = document.getElementById('myChart').getContext('2d');\n            // Destroy previous chart instance if it exists\n            if (chart) {\n              chart.destroy();\n            }\n            const newChart = new Chart(ctx, {\n              type: 'line',\n              data: {\n                labels: data.map((item) => item.ts), // Extract timestamps for labels (X-axis)\n                datasets: [{\n                  label: 'Machine Status',\n                  data: data.map((item) => item.machine_status), // Extract machine status for data points (Y-axis)\n                  backgroundColor: 'rgba(54, 162, 235, 0.2)', // Adjust color as needed\n                  borderColor: 'rgba(54, 162, 235, 1)', // Adjust color as needed\n                  borderWidth: 1,\n                }],\n              },\n              options: {\n                // Customize chart options (scales, legend, etc.) as needed\n                scales: {\n                  xAxes: [{\n                    type: 'category', // Use category scale for timestamps\n                    ticks: {\n                      // ... configure X-axis ticks (e.g., label formatting)\n                    },\n                  }],\n                  yAxes: [{\n                    ticks: {\n                      // ... configure Y-axis ticks (e.g., label formatting)\n                    },\n                  }],\n                },\n                legend: {\n                  display: true, // Show legend\n                  position: 'bottom', // Place legend at the bottom\n                },\n                tooltips: {\n                  enabled: true, // Enable tooltips\n                  // ... configure tooltip content and styling\n                },\n              },\n            });\n            setChart(newChart);\n          }\n        }, [data]);\n      \n        return (\n          <div className=\"App\">\n            <h1>Machine Status</h1>\n            <div className=\"chart-container\">\n              <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n            </div>\n          </div>\n        );\n      }\n\n\nexport default TimelineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}