{"ast":null,"code":"var _jsxFileName = \"/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js\",\n  _s = $RefreshSig$();\n// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\nfunction TimelineChart() {\n  _s();\n  const [data, setData] = useState([]);\n  const [chart, setChart] = useState(null);\n  const [summary, setSummary] = useState({\n    ones: 0,\n    zeros: 0,\n    continuousZeros: 0,\n    continuousOnes: 0\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch('http://localhost:5000/api/data');\n      const jsonData = await response.json();\n      setData(jsonData);\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    if (data.length > 0) {\n      var _data$0$sample, _data$;\n      const ctx = document.getElementById('myChart').getContext('2d');\n      // Destroy previous chart instance if it exists\n      if (chart) {\n        chart.destroy();\n      }\n\n      // Calculate summary data\n      let continuousStreak;\n      const onesCount = data.filter(item => item.sample === 1).length;\n      const zerosCount = data.filter(item => item.sample === 0).length;\n      let currentStreak = (_data$0$sample = (_data$ = data[0]) === null || _data$ === void 0 ? void 0 : _data$.sample) !== null && _data$0$sample !== void 0 ? _data$0$sample : null; // Initialize streak with first sample\n      let continuousZeros = 0;\n      let continuousOnes = 0;\n      for (let i = 1; i < data.length; i++) {\n        if (data[i].sample === currentStreak) {\n          continuousStreak++;\n        } else {\n          if (currentStreak === 0) {\n            continuousZeros = Math.max(continuousZeros, continuousStreak);\n          } else {\n            continuousOnes = Math.max(continuousOnes, continuousStreak);\n          }\n          currentStreak = data[i].sample;\n          continuousStreak = 1;\n        }\n      }\n      // Update last streak if applicable\n      if (currentStreak === 0) {\n        continuousZeros = Math.max(continuousZeros, continuousStreak);\n      } else {\n        continuousOnes = Math.max(continuousOnes, continuousStreak);\n      }\n      setSummary({\n        ones: onesCount,\n        zeros: zerosCount,\n        continuousZeros,\n        continuousOnes\n      });\n      const newChart = new Chart(ctx, {\n        type: 'line',\n        data: {\n          labels: data.map(item => item.ts),\n          // Extract timestamps for labels (X-axis)\n          datasets: [{\n            label: 'Sample Data',\n            data: data.map(item => {\n              if (item.sample === 0) {\n                return 0; // Plot 0 for yellow\n              } else if (item.sample === 1) {\n                return 1; // Plot 1 for green\n              } else {\n                return null; // Don't plot missing data points\n              }\n            }),\n\n            backgroundColor: data.map(item => {\n              if (item.sample === 0) {\n                return 'rgba(255, 215, 0, 0.2)'; // Yellow for 0\n              } else if (item.sample === 1) {\n                return 'rgba(54, 162, 235, 0.2)'; // Green for 1\n              } else {\n                return 'rgba(255, 0, 0, 0.2)'; // Red for missing data\n              }\n            }),\n\n            borderColor: data.map(item => {\n              if (item.sample === 0) {\n                return 'rgba(255, 215, 0, 1)'; // Yellow for 0\n              } else if (item.sample === 1) {\n                return 'rgba(54, 162, 235, 1)'; // Green for 1\n              } else {\n                return 'rgba(255, 0, 0, 1)'; // Red for missing data\n              }\n            }),\n\n            borderWidth: 1,\n            fill: false,\n            // Don't fill the line below\n            pointRadius: 3,\n            // Adjust point size as needed\n            pointHoverRadius: 5 // Adjust hover point size as needed\n          }]\n        },\n\n        options: {\n          // Customize chart options (scales, legend, etc.) as needed\n          scales: {\n            xAxes: [{\n              type: 'category',\n              // Use category scale for timestamps\n              ticks: {\n                // ... configure X-axis ticks (e.g., label formatting)\n              }\n            }],\n            yAxes: [{\n              ticks: {\n                // ... configure Y-axis ticks (e.g., label formatting)\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            // Show legend\n            position: 'bottom' // Place legend at the bottom\n          },\n\n          tooltips: {\n            enabled: true // Enable tooltips\n            // ... configure tooltip content and styling\n          }\n        }\n      });\n\n      setChart(newChart);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Machine Status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        id: \"myChart\",\n        width: \"400\",\n        height: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 11\n  }, this);\n}\n_s(TimelineChart, \"TZ//m9289WH8z30UvErpsK98ySY=\");\n_c = TimelineChart;\nexport default TimelineChart;\nvar _c;\n$RefreshReg$(_c, \"TimelineChart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","CategoryScale","LinearScale","LineController","LineElement","PointElement","jsxDEV","_jsxDEV","register","TimelineChart","_s","data","setData","chart","setChart","summary","setSummary","ones","zeros","continuousZeros","continuousOnes","fetchData","response","fetch","jsonData","json","length","_data$0$sample","_data$","ctx","document","getElementById","getContext","destroy","continuousStreak","onesCount","filter","item","sample","zerosCount","currentStreak","i","Math","max","newChart","type","labels","map","ts","datasets","label","backgroundColor","borderColor","borderWidth","fill","pointRadius","pointHoverRadius","options","scales","xAxes","ticks","yAxes","legend","display","position","tooltips","enabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","width","height","_c","$RefreshReg$"],"sources":["/home/sunbeam/Desktop/myreactapp/src/TimelineChart.js"],"sourcesContent":["// // TimelineChart.js\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const TimelineChart = () => {\n//   const [sampleData, setSampleData] = useState([]);\n\n//   useEffect(() => {\n//     const fetchSampleData = async () => {\n//       try {\n//         const response = await axios.get('http://localhost:5000/api/data');\n//         setSampleData(response.data);\n//       } catch (error) {\n//         console.error('Error fetching sample data:', error);\n//       }\n//     };\n//     fetchSampleData();\n//   }, []);\n\n//   return (\n//     <div style={{ display: 'flex', alignItems: 'flex-end', height: '100px' }}>\n//       {sampleData.map((sample, index) => (\n//         <div\n//           key={index}\n//           style={{\n//             width: `${(sample.machine_status === 1 ? 10 : 5)}%`,\n//             height: `${sample.vibration / 100 * 80}px`,\n//             backgroundColor: sample.machine_status === 0 ? 'yellow' : sample.machine_status === 1 ? 'green' : 'red',\n//             marginRight: '1px',\n//           }}\n//         >\n//           <div style={{ fontSize: '10px', marginTop: '5px' }}>\n//             {new Date(sample.ts).toLocaleTimeString()}\n//           </div>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TimelineChart;\n\n\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Chart, CategoryScale, LinearScale, LineController, LineElement, PointElement } from 'chart.js';\nChart.register(CategoryScale, LinearScale, LineController, LineElement, PointElement);\n\nfunction TimelineChart() {\n    const [data, setData] = useState([]);\n    const [chart, setChart] = useState(null);\n    const [summary, setSummary] = useState({ ones: 0, zeros: 0, continuousZeros: 0, continuousOnes: 0 });\n  \n    useEffect(() => {\n      const fetchData = async () => {\n        const response = await fetch('http://localhost:5000/api/data');\n        const jsonData = await response.json();\n        setData(jsonData);\n      };\n  \n      fetchData();\n    }, []);\n  \n    useEffect(() => {\n      if (data.length > 0) {\n        const ctx = document.getElementById('myChart').getContext('2d');\n        // Destroy previous chart instance if it exists\n        if (chart) {\n          chart.destroy();\n        }\n  \n        // Calculate summary data\n        let continuousStreak;\n        const onesCount = data.filter((item) => item.sample === 1).length;\n        const zerosCount = data.filter((item) => item.sample === 0).length;\n        let currentStreak = data[0]?.sample ?? null; // Initialize streak with first sample\n        let continuousZeros = 0;\n        let continuousOnes = 0;\n        for (let i = 1; i < data.length; i++) {\n          if (data[i].sample === currentStreak) {\n            continuousStreak++;\n          } else {\n            if (currentStreak === 0) {\n              continuousZeros = Math.max(continuousZeros, continuousStreak);\n            } else {\n              continuousOnes = Math.max(continuousOnes, continuousStreak);\n            }\n            currentStreak = data[i].sample;\n            continuousStreak = 1;\n          }\n        }\n        // Update last streak if applicable\n        if (currentStreak === 0) {\n          continuousZeros = Math.max(continuousZeros, continuousStreak);\n        } else {\n          continuousOnes = Math.max(continuousOnes, continuousStreak);\n        }\n        setSummary({ ones: onesCount, zeros: zerosCount, continuousZeros, continuousOnes });\n  \n        const newChart = new Chart(ctx, {\n          type: 'line',\n          data: {\n            labels: data.map((item) => item.ts), // Extract timestamps for labels (X-axis)\n            datasets: [{\n              label: 'Sample Data',\n              data: data.map((item) => {\n                if (item.sample === 0) {\n                  return 0; // Plot 0 for yellow\n                } else if (item.sample === 1) {\n                  return 1; // Plot 1 for green\n                } else {\n                  return null; // Don't plot missing data points\n                }\n              }),\n              backgroundColor: data.map((item) => {\n                if (item.sample === 0) {\n                  return 'rgba(255, 215, 0, 0.2)'; // Yellow for 0\n                } else if (item.sample === 1) {\n                  return 'rgba(54, 162, 235, 0.2)'; // Green for 1\n                } else {\n                  return 'rgba(255, 0, 0, 0.2)'; // Red for missing data\n                }\n              }),\n              borderColor: data.map((item) => {\n                if (item.sample === 0) {\n                  return 'rgba(255, 215, 0, 1)'; // Yellow for 0\n                } else if (item.sample === 1) {\n                  return 'rgba(54, 162, 235, 1)'; // Green for 1\n                } else {\n                  return 'rgba(255, 0, 0, 1)'; // Red for missing data\n                }\n              }),\n              borderWidth: 1,\n              fill: false, // Don't fill the line below\n              pointRadius: 3, // Adjust point size as needed\n              pointHoverRadius: 5, // Adjust hover point size as needed\n            }],\n          },\n              options: {\n                // Customize chart options (scales, legend, etc.) as needed\n                scales: {\n                  xAxes: [{\n                    type: 'category', // Use category scale for timestamps\n                    ticks: {\n                      // ... configure X-axis ticks (e.g., label formatting)\n                    },\n                  }],\n                  yAxes: [{\n                    ticks: {\n                      // ... configure Y-axis ticks (e.g., label formatting)\n                    },\n                  }],\n                },\n                legend: {\n                  display: true, // Show legend\n                  position: 'bottom', // Place legend at the bottom\n                },\n                tooltips: {\n                  enabled: true, // Enable tooltips\n                  // ... configure tooltip content and styling\n                },\n              },\n            });\n            setChart(newChart);\n          }\n        }, [data]);\n      \n        return (\n          <div className=\"App\">\n            <h1>Machine Status</h1>\n            <div className=\"chart-container\">\n              <canvas id=\"myChart\" width=\"400\" height=\"200\"></canvas>\n            </div>\n          </div>\n        );\n      }\n\n\nexport default TimelineChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}